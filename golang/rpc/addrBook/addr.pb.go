// Code generated by protoc-gen-go. DO NOT EDIT.
// source: addr.proto

/*
Package addrBook is a generated protocol buffer package.

It is generated from these files:
	addr.proto

It has these top-level messages:
	Person
	AddressBook
	HelloReq
*/
package addrBook

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PersonPhoneType int32

const (
	Person_MOBILE PersonPhoneType = 0
	Person_HOME   PersonPhoneType = 1
	Person_WORK   PersonPhoneType = 2
)

var PersonPhoneType_name = map[int32]string{
	0: "MOBILE",
	1: "HOME",
	2: "WORK",
}
var PersonPhoneType_value = map[string]int32{
	"MOBILE": 0,
	"HOME":   1,
	"WORK":   2,
}

func (x PersonPhoneType) String() string {
	return proto.EnumName(PersonPhoneType_name, int32(x))
}
func (PersonPhoneType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Person struct {
	Name    string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Id      int32                 `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Email   string                `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	Number  []*Person_PhoneNumber `protobuf:"bytes,4,rep,name=number" json:"number,omitempty"`
	Hashtbl map[string]string     `protobuf:"bytes,5,rep,name=hashtbl" json:"hashtbl,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Person) Reset()                    { *m = Person{} }
func (m *Person) String() string            { return proto.CompactTextString(m) }
func (*Person) ProtoMessage()               {}
func (*Person) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Person) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Person) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Person) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Person) GetNumber() []*Person_PhoneNumber {
	if m != nil {
		return m.Number
	}
	return nil
}

func (m *Person) GetHashtbl() map[string]string {
	if m != nil {
		return m.Hashtbl
	}
	return nil
}

type Person_PhoneNumber struct {
	Number string          `protobuf:"bytes,1,opt,name=number" json:"number,omitempty"`
	Ptype  PersonPhoneType `protobuf:"varint,2,opt,name=ptype,enum=addrBook.PersonPhoneType" json:"ptype,omitempty"`
}

func (m *Person_PhoneNumber) Reset()                    { *m = Person_PhoneNumber{} }
func (m *Person_PhoneNumber) String() string            { return proto.CompactTextString(m) }
func (*Person_PhoneNumber) ProtoMessage()               {}
func (*Person_PhoneNumber) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *Person_PhoneNumber) GetNumber() string {
	if m != nil {
		return m.Number
	}
	return ""
}

func (m *Person_PhoneNumber) GetPtype() PersonPhoneType {
	if m != nil {
		return m.Ptype
	}
	return Person_MOBILE
}

type AddressBook struct {
	Ppl []*Person `protobuf:"bytes,1,rep,name=ppl" json:"ppl,omitempty"`
}

func (m *AddressBook) Reset()                    { *m = AddressBook{} }
func (m *AddressBook) String() string            { return proto.CompactTextString(m) }
func (*AddressBook) ProtoMessage()               {}
func (*AddressBook) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AddressBook) GetPpl() []*Person {
	if m != nil {
		return m.Ppl
	}
	return nil
}

type HelloReq struct {
	Hreq string `protobuf:"bytes,1,opt,name=hreq" json:"hreq,omitempty"`
	Id   int32  `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
}

func (m *HelloReq) Reset()                    { *m = HelloReq{} }
func (m *HelloReq) String() string            { return proto.CompactTextString(m) }
func (*HelloReq) ProtoMessage()               {}
func (*HelloReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *HelloReq) GetHreq() string {
	if m != nil {
		return m.Hreq
	}
	return ""
}

func (m *HelloReq) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func init() {
	proto.RegisterType((*Person)(nil), "addrBook.Person")
	proto.RegisterType((*Person_PhoneNumber)(nil), "addrBook.Person.PhoneNumber")
	proto.RegisterType((*AddressBook)(nil), "addrBook.AddressBook")
	proto.RegisterType((*HelloReq)(nil), "addrBook.HelloReq")
	proto.RegisterEnum("addrBook.PersonPhoneType", PersonPhoneType_name, PersonPhoneType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AddrTxn service

type AddrTxnClient interface {
	AddrReq(ctx context.Context, in *HelloReq, opts ...grpc.CallOption) (*Person, error)
}

type addrTxnClient struct {
	cc *grpc.ClientConn
}

func NewAddrTxnClient(cc *grpc.ClientConn) AddrTxnClient {
	return &addrTxnClient{cc}
}

func (c *addrTxnClient) AddrReq(ctx context.Context, in *HelloReq, opts ...grpc.CallOption) (*Person, error) {
	out := new(Person)
	err := grpc.Invoke(ctx, "/addrBook.AddrTxn/AddrReq", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AddrTxn service

type AddrTxnServer interface {
	AddrReq(context.Context, *HelloReq) (*Person, error)
}

func RegisterAddrTxnServer(s *grpc.Server, srv AddrTxnServer) {
	s.RegisterService(&_AddrTxn_serviceDesc, srv)
}

func _AddrTxn_AddrReq_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddrTxnServer).AddrReq(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/addrBook.AddrTxn/AddrReq",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddrTxnServer).AddrReq(ctx, req.(*HelloReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _AddrTxn_serviceDesc = grpc.ServiceDesc{
	ServiceName: "addrBook.AddrTxn",
	HandlerType: (*AddrTxnServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddrReq",
			Handler:    _AddrTxn_AddrReq_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "addr.proto",
}

func init() { proto.RegisterFile("addr.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 342 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x92, 0x51, 0x6b, 0xc2, 0x30,
	0x14, 0x85, 0x6d, 0x6b, 0xab, 0x5e, 0x87, 0x94, 0xcb, 0x18, 0xa5, 0x6c, 0x20, 0x7d, 0x12, 0x06,
	0x65, 0xba, 0xc1, 0x86, 0xec, 0x65, 0x82, 0xe0, 0xd8, 0x9c, 0x12, 0x04, 0x9f, 0x2b, 0x0d, 0x54,
	0xac, 0x4d, 0x4c, 0xeb, 0x58, 0x7f, 0xf7, 0xfe, 0xc0, 0x48, 0x62, 0x9d, 0xe8, 0xdb, 0x09, 0x39,
	0xf7, 0x3b, 0xa7, 0xbd, 0x01, 0x88, 0xe2, 0x58, 0x84, 0x5c, 0xb0, 0x82, 0x61, 0x53, 0xea, 0x11,
	0x63, 0x9b, 0xe0, 0xd7, 0x04, 0x67, 0x4e, 0x45, 0xce, 0x32, 0x44, 0xa8, 0x67, 0xd1, 0x96, 0x7a,
	0x46, 0xd7, 0xe8, 0xb5, 0x88, 0xd2, 0xd8, 0x01, 0x73, 0x1d, 0x7b, 0x66, 0xd7, 0xe8, 0xd9, 0xc4,
	0x5c, 0xc7, 0x78, 0x0d, 0x36, 0xdd, 0x46, 0xeb, 0xd4, 0xb3, 0x94, 0x49, 0x1f, 0xf0, 0x09, 0x9c,
	0x6c, 0xbf, 0x5d, 0x51, 0xe1, 0xd5, 0xbb, 0x56, 0xaf, 0x3d, 0xb8, 0x0d, 0x2b, 0x7e, 0xa8, 0xd9,
	0xe1, 0x3c, 0x61, 0x19, 0xfd, 0x52, 0x1e, 0x72, 0xf0, 0xe2, 0x33, 0x34, 0x92, 0x28, 0x4f, 0x8a,
	0x55, 0xea, 0xd9, 0x6a, 0xec, 0xee, 0x62, 0x6c, 0xa2, 0xef, 0xc7, 0x59, 0x21, 0x4a, 0x52, 0xb9,
	0xfd, 0x25, 0xb4, 0x4f, 0x78, 0x78, 0x73, 0x4c, 0xd7, 0xcd, 0x2b, 0xfe, 0x03, 0xd8, 0xbc, 0x28,
	0x39, 0x55, 0xf5, 0x3b, 0x03, 0xff, 0x82, 0xce, 0x25, 0x64, 0x51, 0x72, 0x4a, 0xb4, 0xd1, 0x1f,
	0xc2, 0xd5, 0x69, 0x22, 0xba, 0x60, 0x6d, 0x68, 0x79, 0xc0, 0x4a, 0x29, 0xbf, 0xff, 0x3b, 0x4a,
	0xf7, 0x9a, 0xd9, 0x22, 0xfa, 0x30, 0x34, 0x5f, 0x8c, 0xe0, 0x1e, 0x5a, 0x47, 0x1e, 0x02, 0x38,
	0xd3, 0xd9, 0xe8, 0xfd, 0x73, 0xec, 0xd6, 0xb0, 0x09, 0xf5, 0xc9, 0x6c, 0x3a, 0x76, 0x0d, 0xa9,
	0x96, 0x33, 0xf2, 0xe1, 0x9a, 0x41, 0x1f, 0xda, 0x6f, 0x71, 0x2c, 0x68, 0x9e, 0xcb, 0x3e, 0x18,
	0x80, 0xc5, 0x79, 0xea, 0x19, 0xea, 0x2f, 0xb8, 0xe7, 0x3d, 0x89, 0xbc, 0x0c, 0x42, 0x68, 0x4e,
	0x68, 0x9a, 0x32, 0x42, 0x77, 0x72, 0x53, 0x89, 0xa0, 0xbb, 0x6a, 0x53, 0x52, 0x9f, 0x6f, 0x6a,
	0xf0, 0x0a, 0x0d, 0x19, 0xb1, 0xf8, 0xc9, 0xb0, 0xaf, 0xa5, 0x9a, 0xfc, 0x87, 0x57, 0x34, 0xff,
	0x22, 0x30, 0xa8, 0xad, 0x1c, 0xf5, 0x4e, 0x1e, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0xe1, 0xbc,
	0x48, 0x60, 0x35, 0x02, 0x00, 0x00,
}
